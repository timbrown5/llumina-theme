import type { Base24Colors, ThemeParams, ThemeKey, FlavorKey } from '../types/index.ts';

export const createNvimTheme = (
  colors: Base24Colors,
  themeName: string,
  flavor: FlavorKey
): string => `-- ${themeName} (${flavor} flavor)
-- Generated by Lumina Theme Generator
-- Base24 Color Scheme

local colors = {
${Object.entries(colors)
  .map(([key, value]) => `  ${key} = "${value}",`)
  .join('\n')}
}

local theme = {
  Normal = { fg = colors.base05, bg = colors.base00 },
  Comment = { fg = colors.base03, italic = true },
  Keyword = { fg = colors.base0E },
  String = { fg = colors.base0B },
  Function = { fg = colors.base0D },
  Type = { fg = colors.base0A },
  Number = { fg = colors.base09 },
  Constant = { fg = colors.base08 },
  Special = { fg = colors.base0C },
  CursorLine = { bg = colors.base01 },
  Visual = { bg = colors.base02 },
  Search = { fg = colors.base00, bg = colors.base0A },
  LineNr = { fg = colors.base04 },
}

return theme`;

export const createBase24Json = (colors: Base24Colors, themeName: string): string =>
  JSON.stringify(
    {
      name: themeName,
      scheme: 'base24',
      colors: colors,
    },
    null,
    2
  );

export const createThemeParams = (
  activeTheme: ThemeKey,
  flavor: FlavorKey,
  params: ThemeParams,
  colors: Base24Colors
): string =>
  JSON.stringify(
    {
      currentTheme: activeTheme,
      currentFlavor: flavor,
      sliderValues: {
        bgHue: params.bgHue,
        bgSat: params.bgSat,
        bgLight: params.bgLight,
        accentSat: params.accentSat,
        accentLight: params.accentLight,
        commentLight: params.commentLight,
      },
      base24Colors: colors,
    },
    null,
    2
  );
